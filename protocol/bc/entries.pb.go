// Code generated by protoc-gen-go.
// source: entries.proto
// DO NOT EDIT!

/*
Package bc is a generated protocol buffer package.

It is generated from these files:
	entries.proto

It has these top-level messages:
	AssetAmount
	ValueSource
	ValueDestination
	Program
	Mux
*/
package bc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AssetAmount struct {
	AssetId []byte `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Amount  uint64 `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
}

func (m *AssetAmount) Reset()                    { *m = AssetAmount{} }
func (m *AssetAmount) String() string            { return proto.CompactTextString(m) }
func (*AssetAmount) ProtoMessage()               {}
func (*AssetAmount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ValueSource struct {
	Ref      []byte       `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Value    *AssetAmount `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Position uint64       `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
}

func (m *ValueSource) Reset()                    { *m = ValueSource{} }
func (m *ValueSource) String() string            { return proto.CompactTextString(m) }
func (*ValueSource) ProtoMessage()               {}
func (*ValueSource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ValueSource) GetValue() *AssetAmount {
	if m != nil {
		return m.Value
	}
	return nil
}

type ValueDestination struct {
	Ref      []byte       `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Value    *AssetAmount `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Position uint64       `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
}

func (m *ValueDestination) Reset()                    { *m = ValueDestination{} }
func (m *ValueDestination) String() string            { return proto.CompactTextString(m) }
func (*ValueDestination) ProtoMessage()               {}
func (*ValueDestination) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ValueDestination) GetValue() *AssetAmount {
	if m != nil {
		return m.Value
	}
	return nil
}

type Program struct {
	VmVersion uint64 `protobuf:"varint,1,opt,name=vm_version,json=vmVersion" json:"vm_version,omitempty"`
	Code      []byte `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (m *Program) Reset()                    { *m = Program{} }
func (m *Program) String() string            { return proto.CompactTextString(m) }
func (*Program) ProtoMessage()               {}
func (*Program) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Mux struct {
	Body    *Mux_Body    `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Witness *Mux_Witness `protobuf:"bytes,2,opt,name=witness" json:"witness,omitempty"`
}

func (m *Mux) Reset()                    { *m = Mux{} }
func (m *Mux) String() string            { return proto.CompactTextString(m) }
func (*Mux) ProtoMessage()               {}
func (*Mux) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Mux) GetBody() *Mux_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Mux) GetWitness() *Mux_Witness {
	if m != nil {
		return m.Witness
	}
	return nil
}

type Mux_Body struct {
	Sources []*ValueSource `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
	Program *Program       `protobuf:"bytes,2,opt,name=program" json:"program,omitempty"`
	ExtHash []byte         `protobuf:"bytes,3,opt,name=ext_hash,json=extHash,proto3" json:"ext_hash,omitempty"`
}

func (m *Mux_Body) Reset()                    { *m = Mux_Body{} }
func (m *Mux_Body) String() string            { return proto.CompactTextString(m) }
func (*Mux_Body) ProtoMessage()               {}
func (*Mux_Body) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *Mux_Body) GetSources() []*ValueSource {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *Mux_Body) GetProgram() *Program {
	if m != nil {
		return m.Program
	}
	return nil
}

type Mux_Witness struct {
	Destinations []*ValueDestination `protobuf:"bytes,1,rep,name=destinations" json:"destinations,omitempty"`
	Arguments    [][]byte            `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (m *Mux_Witness) Reset()                    { *m = Mux_Witness{} }
func (m *Mux_Witness) String() string            { return proto.CompactTextString(m) }
func (*Mux_Witness) ProtoMessage()               {}
func (*Mux_Witness) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 1} }

func (m *Mux_Witness) GetDestinations() []*ValueDestination {
	if m != nil {
		return m.Destinations
	}
	return nil
}

func init() {
	proto.RegisterType((*AssetAmount)(nil), "chain.protocol.bc.AssetAmount")
	proto.RegisterType((*ValueSource)(nil), "chain.protocol.bc.ValueSource")
	proto.RegisterType((*ValueDestination)(nil), "chain.protocol.bc.ValueDestination")
	proto.RegisterType((*Program)(nil), "chain.protocol.bc.Program")
	proto.RegisterType((*Mux)(nil), "chain.protocol.bc.Mux")
	proto.RegisterType((*Mux_Body)(nil), "chain.protocol.bc.Mux.Body")
	proto.RegisterType((*Mux_Witness)(nil), "chain.protocol.bc.Mux.Witness")
}

func init() { proto.RegisterFile("entries.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x92, 0x3f, 0x8f, 0x9b, 0x40,
	0x10, 0xc5, 0x85, 0x21, 0xc6, 0x1e, 0x88, 0xe4, 0x6c, 0x11, 0x11, 0xf2, 0x47, 0x16, 0x69, 0x5c,
	0x11, 0xc9, 0x71, 0x91, 0x22, 0x45, 0x6c, 0x45, 0x4a, 0x52, 0x58, 0x8a, 0x36, 0x92, 0x23, 0xa5,
	0xb1, 0x16, 0xd8, 0x18, 0x24, 0xc3, 0x72, 0xbb, 0x0b, 0x87, 0x3f, 0xc6, 0x7d, 0xd9, 0xab, 0x4f,
	0xbb, 0xc0, 0xd9, 0xa7, 0xb3, 0xaf, 0xbc, 0x8e, 0x19, 0xfd, 0xde, 0xbc, 0xb7, 0x33, 0xc0, 0x4b,
	0x5a, 0x48, 0x9e, 0x51, 0x11, 0x96, 0x9c, 0x49, 0x86, 0x5e, 0xc5, 0x29, 0xc9, 0x8a, 0xb6, 0x88,
	0xd9, 0x3e, 0x8c, 0xe2, 0xe0, 0x1b, 0x38, 0x4b, 0x21, 0xa8, 0x5c, 0xe6, 0xac, 0x2a, 0x24, 0x7a,
	0x03, 0x23, 0xa2, 0xca, 0x6d, 0x96, 0x78, 0xc6, 0xd4, 0x98, 0xb9, 0xd8, 0xd6, 0xf5, 0xaf, 0x04,
	0xbd, 0x86, 0x21, 0xd1, 0x90, 0x37, 0x98, 0x1a, 0x33, 0x0b, 0x77, 0x55, 0x70, 0x05, 0xce, 0x86,
	0xec, 0x2b, 0xfa, 0x87, 0x55, 0x3c, 0xa6, 0x68, 0x02, 0x26, 0xa7, 0xff, 0x3b, 0xb1, 0xfa, 0x44,
	0x0b, 0x78, 0x51, 0x2b, 0x40, 0xeb, 0x9c, 0xf9, 0x87, 0xf0, 0x51, 0x8a, 0xf0, 0x24, 0x02, 0x6e,
	0x61, 0xe4, 0xc3, 0xa8, 0x64, 0x22, 0x93, 0x19, 0x2b, 0x3c, 0x53, 0x1b, 0xde, 0xd7, 0x41, 0x0d,
	0x13, 0x6d, 0xf9, 0x9d, 0x0a, 0x99, 0x15, 0x44, 0xf5, 0x9e, 0xc5, 0xf7, 0x2b, 0xd8, 0xbf, 0x39,
	0xdb, 0x71, 0x92, 0xa3, 0xf7, 0x00, 0x75, 0xbe, 0xad, 0x29, 0x17, 0x0a, 0x34, 0x34, 0x38, 0xae,
	0xf3, 0x4d, 0xdb, 0x40, 0x08, 0xac, 0x98, 0x25, 0xad, 0xb5, 0x8b, 0xf5, 0x77, 0x70, 0x3b, 0x00,
	0x73, 0x5d, 0x35, 0xe8, 0x13, 0x58, 0x11, 0x4b, 0x0e, 0x5a, 0xe4, 0xcc, 0xdf, 0x9e, 0x89, 0xb5,
	0xae, 0x9a, 0x70, 0xc5, 0x92, 0x03, 0xd6, 0x20, 0xfa, 0x02, 0xf6, 0x75, 0x26, 0x0b, 0x2a, 0xc4,
	0x13, 0x4f, 0x51, 0x9a, 0xbf, 0x2d, 0x85, 0x7b, 0xdc, 0xbf, 0x31, 0xc0, 0x5a, 0x75, 0x23, 0x84,
	0xbe, 0x8f, 0xf0, 0x8c, 0xa9, 0x79, 0x61, 0xc4, 0xc9, 0x19, 0x71, 0x8f, 0xa3, 0x05, 0xd8, 0x65,
	0xfb, 0xe6, 0xce, 0xdc, 0x3f, 0xa3, 0xec, 0xb6, 0x82, 0x7b, 0x54, 0xfd, 0x47, 0xb4, 0x91, 0xdb,
	0x94, 0x88, 0x54, 0x6f, 0xd1, 0xc5, 0x36, 0x6d, 0xe4, 0x4f, 0x22, 0x52, 0xbf, 0x04, 0xbb, 0xcb,
	0x89, 0x7e, 0x80, 0x9b, 0x1c, 0x4f, 0xd8, 0x47, 0xfb, 0x78, 0x29, 0xda, 0xc9, 0xb9, 0xf1, 0x03,
	0x21, 0x7a, 0x07, 0x63, 0xc2, 0x77, 0x55, 0x4e, 0x0b, 0xa9, 0x76, 0x64, 0xce, 0x5c, 0x7c, 0x6c,
	0xac, 0xac, 0x7f, 0x83, 0x28, 0x8e, 0x86, 0x7a, 0xde, 0xe7, 0xbb, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x3b, 0x52, 0x93, 0xb4, 0x14, 0x03, 0x00, 0x00,
}
